name: Node.js app deploy to EKS and Trufflehog Scan

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  trufflehog-scan:
    runs-on: ubuntu-latest
    name: Trufflehog Scan
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'  # Replace with the Python version you need
      
      - name: Install TruffleHog
        run: |
          python -m pip install trufflehog
      
      - name: Run TruffleHog Scan
        run: |
          pwd
          docker run --rm -it -v "$PWD:/pwd" trufflesecurity/trufflehog:latest github --repo https://github.com/trufflesecurity/test_keys

  deploy-to-eks:
    runs-on: ubuntu-latest
    name: Deploy to EKS
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Install kubectl
        uses: azure/setup-kubectl@v2.0
        with:
          version: 'v1.30.0'  # Adjust to the version you need

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      
      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: mydemorepoecr
          IMAGE_TAG: 1.1
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
      
      - name: Update kube config
        run: aws eks update-kubeconfig --name eniyan-eks
      
      - name: Deploy to EKS
        run: |
          kubectl apply -f deployment.yaml
          kubectl apply -f service.yaml
